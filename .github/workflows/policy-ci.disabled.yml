name: policy-ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      ARM_USE_OIDC: true
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    steps:
      - uses: actions/checkout@v4

      # Azure login via OIDC (Service Principal federated creds)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_approved_regions: '["eastus","centralus"]'
          TF_VAR_log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        run: terraform plan -no-color

      # For demo you can apply on main; in real orgs you'd require approvals.
      - name: Terraform Apply (main branch only)
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        env:
          TF_VAR_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_approved_regions: '["eastus","centralus"]'
          TF_VAR_log_analytics_workspace_id: ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}
        run: terraform apply -auto-approve -no-color
